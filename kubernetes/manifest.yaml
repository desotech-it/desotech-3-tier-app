apiVersion: v1
kind: Namespace
metadata:
  name: backend-namespace
---
apiVersion: v1
kind: Namespace
metadata:
  name: frontend-namespace
---
apiVersion: v1
kind: Namespace
metadata:
  name: db-namespace
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: backend-namespace
  labels:
    app: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          imagePullPolicy: Always
          image: r.deso.tech/3tier/backend:1.1.0
          env:
            - name: CONNECTION_STRING
              value: postgres://deso_user:deso_user@db-service.db-namespace/deso_db
          ports:
            - containerPort: 3001
          resources:
            limits:
              memory: "128Mi"
              cpu: "200m"

---

apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: backend-namespace
spec:
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 3001
      targetPort: 3001

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  namespace: frontend-namespace
  labels:
    app: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          imagePullPolicy: Always
          image: r.deso.tech/3tier/frontend:1.1.0
          env:
            - name: API_URL
              value: http://backend-service.backend-namespace:3001/data
          ports:
            - containerPort: 3000
          resources:
            limits:
              memory: "128Mi"
              cpu: "200m"
---

apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: frontend-namespace
spec:
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
  type: LoadBalancer


---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-deployment
  namespace: db-namespace
  labels:
    app: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
        - name: db
          image: r.deso.tech/3tier/db:1.1.0
#          env:
#            - name: POSTGRES_USER
#              value: deso_user
#            - name: POSTGRES_PASSWORD
#              value: deso_user
#            - name: POSTGRES_DB
#              value: deso_db
#         volumeMounts:
#            - name: init-sql-scripts
#              mountPath: /docker-entrypoint-initdb.d
          resources:
            limits:
              memory: "128Mi"
              cpu: "200m"
      volumes:
        - name: init-sql-scripts
          emptyDir: {}

---

apiVersion: v1
kind: Service
metadata:
  name: db-service
  namespace: db-namespace
spec:
  selector:
    app: db
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
